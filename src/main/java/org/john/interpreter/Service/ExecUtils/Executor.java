package org.john.interpreter.Service.ExecUtils;

import org.springframework.util.ResourceUtils;

import java.io.*;
import java.util.List;

public class Executor {

    private static LexicalAnalysis lexicalAnalysis;
    private static GramParser gramParser;

    private static void testProgram() {
        try {
            //获取文件路径
            String prefix = ResourceUtils.getFile("classpath:others").getAbsolutePath();
            System.out.println(prefix);
            FileInputStream fis = new FileInputStream(prefix + "/SampleTest.txt");

            //用于读取程序
            StringBuffer sbuf = new StringBuffer();
            String line;
            BufferedReader br = new BufferedReader(new InputStreamReader(fis));
            while ((line = br.readLine()) != null) {
                sbuf.append(line);
                sbuf.append("\n");//添加换行符
            }
            sbuf.deleteCharAt(sbuf.lastIndexOf("\n"));//删除最后一个换行符

            /* 写入Txt文件 */
            File write = new File(prefix + "/MyOutput.txt"); // 相对路径，如果没有则要建立一个新的output.txt文件
            BufferedWriter out = new BufferedWriter(new FileWriter(write));

            // 程序文件的每个程序都用 "-----" 来分隔
            String[] pros = sbuf.toString().split("-----\n");
            int index = 0;
            List<LexiNode> lexiNodes = null;
            for (String pro : pros) {
                out.write("\n--- " + index++ + " ---\n");
                //进行词法分析得到分析节点集合
                lexiNodes = LexicalAnalysis.lexicalScan(pro + "\0");

                for (LexiNode node : lexiNodes) {
                    out.write(node.toString());
                    out.write("\n");
                }
            }
            out.flush(); // 把缓存区内容压入文件
            out.close(); // 最后记得关闭文件

            GramParser gramParser = new GramParser();
            gramParser.LLParse(LexicalAnalysis.preprocess(lexiNodes));
        } catch (IOException e) {
            e.printStackTrace();
        }
    }


    public static void main(String[] args) {
        testProgram();
    }
}
